{
  "compilerOptions": {
    "target": "ESNext",
    "useDefineForClassFields": true,
    "lib": ["DOM", "DOM.Iterable", "ESNext"],
    "allowJs": false,
    "skipLibCheck": true,
    "esModuleInterop": false,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "module": "ESNext",
    "moduleResolution": "Node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",
    /* Relative paths */
    "baseUrl": "src",
    "paths": {
      "assets/*": ["assets/*"],
      "common/*": ["common/*"],
      "components/*": ["components/*"],
      "config/*": ["config/*"],
      "layouts/*": ["layouts/*"],
      "default/*": ["components/defaultButton/*"],
      "tutorial/*": ["components/tutorial/*"],
      "pages/*": ["pages/*"],
      "play/*": ["components/playComponent/*"],
      "settings/*": ["components/settings/*"],
      "toasts/*": ["components/toasts/*"],
      "quiz/*": ["components/playComponent/quiz/*"],
      "chat/*": ["components/playComponent/chat/*"],
      "announcementFeed/*": ["components/playComponent/announcementFeed/*"]
    },
    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied `any` type.. */,
    "strictNullChecks": true /* When type checking, take into account `null` and `undefined`. */,
    "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
    "strictBindCallApply": true /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */,
    "strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
    "noImplicitThis": true /* Enable error reporting when `this` is given the type `any`. */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
    "noUnusedLocals": false /* Enable error reporting when a local variables aren't read. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read */,
    "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
    "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
    "allowUnusedLabels": true /* Disable error reporting for unused labels. */,
    "allowUnreachableCode": true /* Disable error reporting for unreachable code. */
  },
  "include": ["src"],
  "references": [{ "path": "./tsconfig.node.json" }]
}
